apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: etime-${ENVIRONMENT}-${LOCATION}-backend-deployment
labels:
  app.kubernetes.io/name: etime-${ENVIRONMENT}-${LOCATION}-backend
  app.kubernetes.io/instance: etime-${ENVIRONMENT}-${LOCATION}-backend-main
  app.kubernetes.io/component: ${ENVIRONMENT}-${LOCATION}-backend
  app.kubernetes.io/part-of: etime-${ENVIRONMENT}-${LOCATION}

objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: etime-${ENVIRONMENT}-${LOCATION}-backend-deployment
      labels:
        app.openshift.io/runtime: spring-boot
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            name: etime-${ENVIRONMENT}-${LOCATION}-backend-pod
        spec:
          serviceAccountName: runas-anyuid
          securityContext:
            runAsUser: 0
          containers:
            - name: etime-${ENVIRONMENT}-${LOCATION}-backend-container
              image: prj-elca-timecontrol-docker.artifactory.svc.elca.ch/backend:${IMAGE_TAG}
              imagePullPolicy: Always
              env:
                - name: ENVIRONMENT
                  value: ${ENVIRONMENT}
                - name: LOCATION
                  value: ${LOCATION}
                - name: DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${ENVIRONMENT}-${LOCATION}-backend-config
                      key: DB_USERNAME
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${ENVIRONMENT}-${LOCATION}-backend-config
                      key: DB_PASSWORD
              envFrom:
                - configMapRef:
                    name: ${ENVIRONMENT}-${LOCATION}-backend-config
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUESTS}
                  memory: ${MEMORY_REQUESTS}
              livenessProbe:
                httpGet:
                  path: /actuator/health/liveness
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 200
                periodSeconds: 60
                timeoutSeconds: 10
                failureThreshold: 5
                successThreshold: 1
              readinessProbe:
                httpGet:
                  path: /actuator/health/readiness
                  port: 8081
                  scheme: HTTP
                initialDelaySeconds: 200
                periodSeconds: 60
                timeoutSeconds: 10
                failureThreshold: 5
                successThreshold: 1

  - apiVersion: v1
    kind: Service
    metadata:
      name: etime-${ENVIRONMENT}-${LOCATION}-backend-service
    spec:
      ports:
        - name: etime-${ENVIRONMENT}-${LOCATION}-backend-port
          port: 8080
        - name: etime-production-backend-port-8081
          port: 8081
          protocol: TCP
          targetPort: 8081
      selector:
        name: etime-${ENVIRONMENT}-${LOCATION}-backend-pod

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: etime-${ENVIRONMENT}-${LOCATION}-backend-route
      annotations:
        haproxy.router.openshift.io/timeout: 1h
    spec:
      host: etime-${ENVIRONMENT}-${LOCATION}-backend-prj-elca-timecontrol.apps.okd.svc.elca.ch
      port:
        targetPort: etime-${ENVIRONMENT}-${LOCATION}-backend-port
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Allow 
      to:
        kind: Service
        name: etime-${ENVIRONMENT}-${LOCATION}-backend-service
        weight: 100

parameters:
  - description: Docker image tag to deploy
    name: IMAGE_TAG
  - description: Environment to deploy
    name: ENVIRONMENT
  - description: Deployment location
    name: LOCATION
  - description: CPU usage limit
    name: CPU_LIMIT
  - description: Memory usage limit
    name: MEMORY_LIMIT
  - description: Minimum CPU usage
    name: CPU_REQUESTS
  - description: Minimum memory usage
    name: MEMORY_REQUESTS
